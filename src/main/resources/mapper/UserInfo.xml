<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.glodon.sglw.server.dao.AppInfoDao" >
  <resultMap id="BaseResultMap" type="com.glodon.sglw.server.model.AppInfo" >
    <id column="version_id" property="versionId" jdbcType="VARCHAR" />
    <result column="version_code" property="versionCode" jdbcType="INTEGER" />
    <result column="version_name" property="versionName" jdbcType="VARCHAR" />
    <result column="is_new" property="isNew" jdbcType="VARCHAR" />
    <result column="created_at" property="createdAt" jdbcType="BIGINT" />
    <result column="created_at_show" property="createdAtShow" jdbcType="TIMESTAMP" />
    <result column="del_status" property="delStatus" jdbcType="VARCHAR" />
    <result column="version_type" property="versionType" jdbcType="VARCHAR" />
    <result column="update_url" property="updateUrl" jdbcType="VARCHAR" />
    <result column="force_update" property="forceUpdate" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    version_id, version_code, version_name, is_new, created_at, created_at_show, del_status, 
    version_type, update_url,force_update
  </sql>

  <sql id="Base_All_List" >
      a.version_id,
      a.version_code,
      a.version_name,
      a.is_new,
      a.created_at,
      <!--a.created_at_show,-->
      <!--a.del_status,-->
      a.version_type,
      <!--a.update_url,-->
      a.force_update
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from app_info
    where version_id = #{versionId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from app_info
    where version_id = #{versionId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.glodon.sglw.server.model.AppInfo" >
    insert into app_info (version_id, version_code, version_name, 
      is_new, created_at, created_at_show, 
      del_status, version_type, update_url,force_update
      )
    values (#{versionId,jdbcType=VARCHAR}, #{versionCode,jdbcType=INTEGER}, #{versionName,jdbcType=VARCHAR}, 
      #{isNew,jdbcType=VARCHAR}, #{createdAt,jdbcType=BIGINT}, #{createdAtShow,jdbcType=TIMESTAMP}, 
      #{delStatus,jdbcType=VARCHAR}, #{versionType,jdbcType=VARCHAR}, #{updateUrl,jdbcType=VARCHAR}, #{forceUpdate,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.glodon.sglw.server.model.AppInfo" >
    insert into app_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      version_id,
      version_code,
      version_name,
      is_new,
      created_at,
      created_at_show,
      del_status,
      version_type,
      update_url,
        force_update,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{versionId,jdbcType=VARCHAR},
      #{versionCode,jdbcType=INTEGER},
      #{versionName,jdbcType=VARCHAR},
      #{isNew,jdbcType=VARCHAR},
      #{createdAt,jdbcType=BIGINT},
      #{createdAtShow,jdbcType=TIMESTAMP},
      #{delStatus,jdbcType=VARCHAR},
      #{versionType,jdbcType=VARCHAR},
      #{updateUrl,jdbcType=VARCHAR},
      #{forceUpdate,jdbcType=VARCHAR},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.glodon.sglw.server.model.AppInfo" >
    update app_info
    <set >
      <if test="versionCode != null" >
        version_code = #{versionCode,jdbcType=INTEGER},
      </if>
      <if test="versionName != null" >
        version_name = #{versionName,jdbcType=VARCHAR},
      </if>
      <if test="isNew != null" >
        is_new = #{isNew,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=BIGINT},
      </if>
      <if test="createdAtShow != null" >
        created_at_show = #{createdAtShow,jdbcType=TIMESTAMP},
      </if>
      <if test="delStatus != null" >
        del_status = #{delStatus,jdbcType=VARCHAR},
      </if>
      <if test="versionType != null" >
        version_type = #{versionType,jdbcType=VARCHAR},
      </if>
      <if test="updateUrl != null" >
        update_url = #{updateUrl,jdbcType=VARCHAR},
      </if>
    </set>
    where version_id = #{versionId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.glodon.sglw.server.model.AppInfo" >
    update app_info
    set version_code = #{versionCode,jdbcType=INTEGER},
      version_name = #{versionName,jdbcType=VARCHAR},
      is_new = #{isNew,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=BIGINT},
      created_at_show = #{createdAtShow,jdbcType=TIMESTAMP},
      del_status = #{delStatus,jdbcType=VARCHAR},
      version_type = #{versionType,jdbcType=VARCHAR},
      update_url = #{updateUrl,jdbcType=VARCHAR}
    where version_id = #{versionId,jdbcType=VARCHAR}
  </update>
  
  <select id="selectUpdateVersion" resultMap="BaseResultMap" parameterType="com.glodon.sglw.server.VO.AppWebVo" >
        select a.version_name, a.version_code, a.force_update, a.created_at, f.file_url as updateUrl
        from app_info as a,file_info as f
        where a.del_status = #{delStatus,jdbcType=VARCHAR} and a.version_id = f.belong_object_id
        <if test="dateFrom != null" >
            and version_type =  #{dateFrom,jdbcType=VARCHAR},
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
        limit 0,1
    </select>



    <select id="findAll" resultMap="BaseResultMap" parameterType="com.glodon.sglw.server.model.AppInfo" >
        select
        <include refid="Base_All_List" />
        ,f.file_url as updateUrl

        from app_info as a
        LEFT JOIN file_info as f
        ON a.version_id = f.belong_object_id

        <where>
            <include refid="findAllSql" />
        </where>
        <if test="oderByString != null" >
            ORDER BY ${oderByString}
        </if>

        <if test="startNum != null" >
            LIMIT #{startNum,jdbcType=BIGINT},#{pageSize,jdbcType=BIGINT}
        </if>
    </select>

    <select id="countOfApp" resultType="java.lang.Integer" parameterType="com.glodon.sglw.server.model.AppInfo" >
        select count(1)
        from app_info as a
        <where>
            <include refid="findAllSql" />
        </where>
    </select>

    <sql id="findAllSql">
        <if test="delStatus != null and '' != delStatus" >
            and a.del_status = #{delStatus,jdbcType=VARCHAR}
        </if>

        <if test="dateFrom != null and '' != dateFrom" >
            and a.version_type = #{dateFrom,jdbcType=VARCHAR}
        </if>

        <if test="startTime != null and '' != startTime" >
            and <![CDATA[  #{startTime,jdbcType=BIGINT} < a.created_at ]]>
        </if>

        <if test="endTime != null and '' != endTime" >
            and <![CDATA[  a.created_at<#{endTime,jdbcType=BIGINT} ]]>
        </if>
    </sql>

    <sql id="update_set">
        <if test="record.roomId != null" >
            room_id = #{roomId,jdbcType=VARCHAR},
        </if>
        <if test="record.projectId != null" >
            project_id = #{projectId,jdbcType=VARCHAR},
        </if>
        <if test="record.roomName != null" >
            room_name = #{roomName,jdbcType=VARCHAR},
        </if>
        <if test="record.createdAt != null" >
            created_at = #{createdAt,jdbcType=BIGINT},
        </if>
        <if test="record.createdAtShow != null" >
            created_at_show = #{createdAtShow,jdbcType=TIMESTAMP},
        </if>
        <if test="record.delStatus != null" >
            del_status = #{delStatus,jdbcType=VARCHAR},
        </if>
    </sql>
</mapper>