<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:task="http://www.springframework.org/schema/task" 
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/task  
	http://www.springframework.org/schema/task/spring-task-3.1.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd 
	">
	<!--<import resource="/cxf-client-Context.xml"/>-->
    <!-- 加载jdbc连接池文件 -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:property/init.properties</value>
            </list>
        </property>
    </bean>
    <!-- 配置dbcp数据源 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <!-- Connection Info -->
        <property name="driverClassName" value="${jdbc.dbcp.dataSource.driverClassName}" />
        <property name="url" value="${jdbc.dbcp.dataSource.url}" />
        <property name="username" value="${jdbc.dbcp.dataSource.username}" />
        <property name="password" value="${jdbc.dbcp.dataSource.password}" />
        <!-- Connection Pooling DBCP -->
        <property name="initialSize" value="${jdbc.dbcp.dataSource.initialSize}" />
        <property name="maxActive" value="${jdbc.dbcp.dataSource.maxActive}" />
        <property name="maxIdle" value="${jdbc.dbcp.dataSource.maxIdle}" />
        <property name="maxWait" value="${jdbc.dbcp.dataSource.maxWait}" />
        <property name="poolPreparedStatements" value="${jdbc.dbcp.dataSource.poolPreparedStatements}" />
        <property name="defaultAutoCommit" value="${jdbc.dbcp.dataSource.defaultAutoCommit}" />
        <!-- 是否自动回收超时连接 -->
        <property name="removeAbandoned" value="${jdbc.dbcp.dataSource.removeAbandoned}" />
		<property name="removeAbandonedTimeout" value="${jdbc.dbcp.dataSource.removeAbandonedTimeout}"/>  
		<!-- 最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请  -->
		<property name="minIdle" value="${jdbc.dbcp.dataSource.minIdle}"/>  
		<!-- 运行判断连接超时任务的时间间隔，单位为毫秒，默认为-1，即不执行任务  -->
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.dbcp.dataSource.timeBetweenEvictionRunsMillis}"/>  
		<!-- 连接的超时时间，默认为半小时  -->
		<property name="minEvictableIdleTimeMillis" value="${jdbc.dbcp.dataSource.minEvictableIdleTimeMillis}"/>  
    </bean>
    <!-- 设置json和response的字符编码 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class = "org.springframework.http.converter.StringHttpMessageConverter">
                    <property name = "supportedMediaTypes"><list><value>text/plain;charset=UTF-8</value></list></property>
                </bean>
            </list>
        </property>
    </bean>
    <bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
        <property name ="supportedMediaTypes">   
              <list>   
                  <value>text/plain;charset=UTF-8</value>   
              </list>   
        </property> 
    </bean>
    <bean id="jsonHttpMessageConverter" 
        class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"> 
        <property name="supportedMediaTypes"> 
       		 <list>   
                <value>text/plain;charset=UTF-8</value> 
            </list> 
        </property> 
	</bean>
    <!-- mybatis文件配置，扫描所有mapper文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	        <property name="dataSource" ref="dataSource" />
	        <property name="configLocation" value="classpath:mybatis-conf.xml" />
			<property name="mapperLocations" value="classpath:mapper/*.xml" />
	        <property name="typeAliasesPackage" value="com.glodon.sglw.server.model" />
	</bean>
	<!-- spring与mybatis整合配置，扫描所有dao -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" >
		<property name="basePackage" value="com.glodon.sglw.server.dao"></property>
		<property name="sqlSessionFactoryBeanName"  value="sqlSessionFactory"></property>
	</bean>
	<!-- 对数据源进行事务管理 -->
    <bean id="transactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <!-- 配置注解事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" />
    
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"  >
		<constructor-arg index="0"  ref="sqlSessionFactory"/>
		 <constructor-arg index="1" value="BATCH" />
	</bean>
	<context:component-scan base-package="com.glodon.*"/>
    <task:annotation-driven/>
    <!-- 接口访问权限拦截器 -->
    <mvc:annotation-driven/>
    <mvc:default-servlet-handler/>
    <mvc:interceptors> 
        <mvc:interceptor>
            <mvc:mapping path="/api/**" />
            <bean class="com.glodon.sglw.server.utils.AccessSecurityHandlerInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>
</beans>